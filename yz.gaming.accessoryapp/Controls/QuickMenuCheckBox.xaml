<UserControl x:Class="yz.gaming.accessoryapp.Controls.QuickMenuCheckBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:yz.gaming.accessoryapp.Controls"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <Style x:Key="CheckRadioFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="SliderCheckBox" TargetType="{x:Type CheckBox}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="StoryboardIsChecked">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="CheckFlag">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="44"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="StoryboardIsCheckedOff">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="CheckFlag">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="44"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <BulletDecorator Background="Transparent" SnapsToDevicePixels="true">
                                <BulletDecorator.Bullet>
                                    <Border x:Name="ForegroundPanel" BorderThickness="1" Width="86" Height="42" CornerRadius="20">
                                        <Canvas>
                                            <Border Background="White" x:Name="CheckFlag" CornerRadius="24" VerticalAlignment="Center" BorderThickness="1" Width="40" Height="40" RenderTransformOrigin="0.5,0.5">
                                                <Border.RenderTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform/>
                                                        <SkewTransform/>
                                                        <RotateTransform/>
                                                        <TranslateTransform/>
                                                    </TransformGroup>
                                                </Border.RenderTransform>
                                            </Border>
                                        </Canvas>
                                    </Border>
                                </BulletDecorator.Bullet>
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                            </BulletDecorator>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasContent" Value="true">
                                    <Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
                                    <Setter Property="Padding" Value="4,0,0,0"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="ForegroundPanel" Property="Background" Value="#FF1AA74F" />
                                    <Trigger.EnterActions>
                                        <BeginStoryboard x:Name="BeginStoryboardCheckedTrue" Storyboard="{StaticResource StoryboardIsChecked}" />
                                        <RemoveStoryboard BeginStoryboardName="BeginStoryboardCheckedFalse" />
                                    </Trigger.EnterActions>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter TargetName="ForegroundPanel" Property="Background" Value="Gray" />
                                    <Trigger.EnterActions>
                                        <BeginStoryboard x:Name="BeginStoryboardCheckedFalse" Storyboard="{StaticResource StoryboardIsCheckedOff}" />
                                        <RemoveStoryboard BeginStoryboardName="BeginStoryboardCheckedTrue" />
                                    </Trigger.EnterActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Border x:Name="Border"
                Background="Transparent"
                BorderThickness="1"
                BorderBrush="Transparent">
            <Grid x:Name="MainGrid"
                  Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="1*" />
                </Grid.ColumnDefinitions>
                <Viewbox Grid.Column="0" Margin="{Binding IconMargin, Mode=OneWay}"
                         HorizontalAlignment="Left">
                    <Image Source="{Binding IconPath}"/>
                </Viewbox>
                <Viewbox Grid.Column="1" Margin="{Binding TextMargin, Mode=OneWay}"
                         HorizontalAlignment="Left"
                         VerticalAlignment="Center">
                    <TextBlock Text="{Binding Text}"
                               Foreground="White"
                               FontSize="28"/>
                </Viewbox>
                <Viewbox x:Name="CheckBox"
                      HorizontalAlignment="Right"
                      VerticalAlignment="Center"
                      Grid.Column="2"
                      Margin="0,8,8,8">
                    <CheckBox Style="{DynamicResource SliderCheckBox}"
                              IsChecked="{Binding IsChecked, Mode=TwoWay}"
                              Checked="CheckBox_Checked"
                              Unchecked="CheckBox_Unchecked"/>
                </Viewbox>
            </Grid>
        </Border>
    </Grid>
</UserControl>
